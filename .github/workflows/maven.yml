# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: springboot CI-CD Pipeline

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:
env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: cluster-1
  CLUSTER_NAME: ${{ secrets.GKE_CLUSTER_NAME }}
  ZONE_NAME: us-central1-c
# with:
#   args: apply -f packaging/k8s/manifests/ -n prod


jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3 
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'adopt'
        server-id: docker.io
        server-username: MAVEN_USERNAME
        server-password: MAVEN_PASSWORD

    #     distribution: 'temurin'
    #     cache: maven
    # - name: Build with Maven
    #   run: mvn -B package --file pom.xml

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    # - name: Update dependency graph
    #   uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
    - name: Building and Pushing the User-service
      run: mvn package dockerfile:push --file user-service/pom.xml
      env:
      MAVEN_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      MAVEN_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

    - name: Building and Pushing the department-service
      run: mvn package dockerfile:push --file department-service/pom.xml
      env:
      MAVEN_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      MAVEN_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

    - name: Building and Pushing the cloud-confgi-server
      run: mvn package dockerfile:push --file cloud-config-server/pom.xml
      env:
      MAVEN_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      MAVEN_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

    - name: Building and Pushing the cloud-gateway
      run: mvn package dockerfile:push --file cloud-gateway/pom.xml
      env:
      MAVEN_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      MAVEN_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

    - name: Building and Pushing the hystrix-dashboard
      run: mvn package dockerfile:push --file hystrix-dashboard/pom.xml
      env:
      MAVEN_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      MAVEN_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

    - name: Building and Pushing the service-registry
      run: mvn package dockerfile:push --file service-registry/pom.xml
      env:
      MAVEN_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      MAVEN_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

  Deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: kubectl - Google Cloud GKE cluster.
      uses: ameydev/gke-kubectl-action@master
      env:
        PROJECT_ID: ${{ secrets.PROJECT_ID }}
        APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
        CLUSTER_NAME: ${{ secrets.GKE_CLUSTER_NAME }}
        ZONE_NAME: us-central1-c
      with:
        args: apply -f k8s/
